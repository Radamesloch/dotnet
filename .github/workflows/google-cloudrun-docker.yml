
name: Build and Deploy to Cloud Run
on:
  push:
    branches:
      [ "main" ]
env:
  PROJECT_ID: gcp-kubernetes1 # TODO: update to your Google Cloud project ID
  GAR_NAME: dotnet #update artifact registry name
  GAR_LOCATION: us-central1 #update artifact registry location
  SERVICE: dotnettest # TODO: update to your service name
  REGION: us-central1 # TODO: update to your region
  #WORKLOAD_IDENTITY_PROVIDER: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider' # TODO: update to your workload identity provider

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2 # actions/checkout@v4  ====> actions/checkout@v2

      # Configure Workload Identity Federation and generate an access token.
      #
      # See https://github.com/google-github-actions/auth for more options,
      # including authenticating via a JSON credentials file.

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2 # google-github-actions/auth@v2 ==> google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # BEGIN - Docker auth and build
      #
      # If you already have a container image, you can omit these steps.
      - name: Docker Auth
        run: |-
          gcloud auth configure-docker "${{ env.GAR_LOCATION}}-docker.pkg.dev" 

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"
          
      # END - Docker auth and build

      - name: Deploy to Cloud Run
        id: deploy        
        uses: google-github-actions/deploy-cloudrun@v2 # google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name below:

          image: "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}" 
      # If required, use the Cloud Run URL output in later steps
      - name: Show output
        run: |2-

          echo ${{ steps.deploy.outputs.url }}
